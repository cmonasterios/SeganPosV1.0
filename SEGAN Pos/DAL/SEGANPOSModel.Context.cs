//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SEGAN_POS.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SEGANPOSEntities : DbContext
    {
        public SEGANPOSEntities(string nameOrConnectionString)
            : base(nameOrConnectionString)
        {
        }
    
        public SEGANPOSEntities()
            : base("name=SEGANPOSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EPK_Accion> EPK_Accion { get; set; }
        public virtual DbSet<EPK_ActualizacionArticulo> EPK_ActualizacionArticulo { get; set; }
        public virtual DbSet<EPK_ActualizacionEncabezado> EPK_ActualizacionEncabezado { get; set; }
        public virtual DbSet<EPK_AlivioEfectivoDetalle> EPK_AlivioEfectivoDetalle { get; set; }
        public virtual DbSet<EPK_AlivioEfectivoEncabezado> EPK_AlivioEfectivoEncabezado { get; set; }
        public virtual DbSet<EPK_Almacen> EPK_Almacen { get; set; }
        public virtual DbSet<EPK_AperturaCajeroDenominacion> EPK_AperturaCajeroDenominacion { get; set; }
        public virtual DbSet<EPK_AperturaCajeroEncabezado> EPK_AperturaCajeroEncabezado { get; set; }
        public virtual DbSet<EPK_App> EPK_App { get; set; }
        public virtual DbSet<EPK_ArticuloTienda> EPK_ArticuloTienda { get; set; }
        public virtual DbSet<EPK_Auditoria> EPK_Auditoria { get; set; }
        public virtual DbSet<EPK_Caja> EPK_Caja { get; set; }
        public virtual DbSet<EPK_CajaDispositivo> EPK_CajaDispositivo { get; set; }
        public virtual DbSet<EPK_CajaDispositivoHistorico> EPK_CajaDispositivoHistorico { get; set; }
        public virtual DbSet<EPK_Cargo> EPK_Cargo { get; set; }
        public virtual DbSet<EPK_CierreCajeroDenominacion> EPK_CierreCajeroDenominacion { get; set; }
        public virtual DbSet<EPK_CierreCajeroEncabezado> EPK_CierreCajeroEncabezado { get; set; }
        public virtual DbSet<EPK_CierreCajeroPagos> EPK_CierreCajeroPagos { get; set; }
        public virtual DbSet<EPK_CierreCajeroPOS> EPK_CierreCajeroPOS { get; set; }
        public virtual DbSet<EPK_CierreVentaEncabezado> EPK_CierreVentaEncabezado { get; set; }
        public virtual DbSet<EPK_CierreVentaPagos> EPK_CierreVentaPagos { get; set; }
        public virtual DbSet<EPK_CierreVentaPOS> EPK_CierreVentaPOS { get; set; }
        public virtual DbSet<EPK_Ciudad> EPK_Ciudad { get; set; }
        public virtual DbSet<EPK_Cliente> EPK_Cliente { get; set; }
        public virtual DbSet<EPK_ClienteFormaPago> EPK_ClienteFormaPago { get; set; }
        public virtual DbSet<EPK_ClienteTelefono> EPK_ClienteTelefono { get; set; }
        public virtual DbSet<EPK_Coleccion> EPK_Coleccion { get; set; }
        public virtual DbSet<EPK_Color> EPK_Color { get; set; }
        public virtual DbSet<EPK_CombinacionGrupos> EPK_CombinacionGrupos { get; set; }
        public virtual DbSet<EPK_Contingencia> EPK_Contingencia { get; set; }
        public virtual DbSet<EPK_Denominacion> EPK_Denominacion { get; set; }
        public virtual DbSet<EPK_Departamento> EPK_Departamento { get; set; }
        public virtual DbSet<EPK_DepositoCheque> EPK_DepositoCheque { get; set; }
        public virtual DbSet<EPK_DepositoDetalle> EPK_DepositoDetalle { get; set; }
        public virtual DbSet<EPK_Descuento> EPK_Descuento { get; set; }
        public virtual DbSet<EPK_Dispositivo> EPK_Dispositivo { get; set; }
        public virtual DbSet<EPK_EfectivoRemanenteDetalle> EPK_EfectivoRemanenteDetalle { get; set; }
        public virtual DbSet<EPK_EfectivoRemanenteEncabezado> EPK_EfectivoRemanenteEncabezado { get; set; }
        public virtual DbSet<EPK_EmpleadoAcceso> EPK_EmpleadoAcceso { get; set; }
        public virtual DbSet<EPK_EmpleadoLocalidad> EPK_EmpleadoLocalidad { get; set; }
        public virtual DbSet<EPK_Empleados> EPK_Empleados { get; set; }
        public virtual DbSet<EPK_EmpleadoTerminal> EPK_EmpleadoTerminal { get; set; }
        public virtual DbSet<EPK_EntidadFinanciera> EPK_EntidadFinanciera { get; set; }
        public virtual DbSet<EPK_Estado> EPK_Estado { get; set; }
        public virtual DbSet<EPK_Estatus> EPK_Estatus { get; set; }
        public virtual DbSet<EPK_EventoTerminal> EPK_EventoTerminal { get; set; }
        public virtual DbSet<EPK_FacturaDetalle> EPK_FacturaDetalle { get; set; }
        public virtual DbSet<EPK_FacturaEncabezado> EPK_FacturaEncabezado { get; set; }
        public virtual DbSet<EPK_FacturaEsperaDetalle> EPK_FacturaEsperaDetalle { get; set; }
        public virtual DbSet<EPK_FacturaEsperaEncabezado> EPK_FacturaEsperaEncabezado { get; set; }
        public virtual DbSet<EPK_FacturaPago> EPK_FacturaPago { get; set; }
        public virtual DbSet<EPK_Feriados> EPK_Feriados { get; set; }
        public virtual DbSet<EPK_FeriadosRegion> EPK_FeriadosRegion { get; set; }
        public virtual DbSet<EPK_FormaPago> EPK_FormaPago { get; set; }
        public virtual DbSet<EPK_Funcionalidad> EPK_Funcionalidad { get; set; }
        public virtual DbSet<EPK_Genero> EPK_Genero { get; set; }
        public virtual DbSet<EPK_Grupo> EPK_Grupo { get; set; }
        public virtual DbSet<EPK_GrupoFuncionalidad> EPK_GrupoFuncionalidad { get; set; }
        public virtual DbSet<EPK_GrupoZona> EPK_GrupoZona { get; set; }
        public virtual DbSet<EPK_HistoricoArticuloExistencia> EPK_HistoricoArticuloExistencia { get; set; }
        public virtual DbSet<EPK_HistoricoFacturaDetalle> EPK_HistoricoFacturaDetalle { get; set; }
        public virtual DbSet<EPK_HistoricoFacturaEncabezado> EPK_HistoricoFacturaEncabezado { get; set; }
        public virtual DbSet<EPK_HistoricoFacturaPago> EPK_HistoricoFacturaPago { get; set; }
        public virtual DbSet<EPK_HistoricoNotaCreditoDetalle> EPK_HistoricoNotaCreditoDetalle { get; set; }
        public virtual DbSet<EPK_HistoricoNotaCreditoEncabezado> EPK_HistoricoNotaCreditoEncabezado { get; set; }
        public virtual DbSet<EPK_HuellaEmpleado> EPK_HuellaEmpleado { get; set; }
        public virtual DbSet<EPK_Insumos> EPK_Insumos { get; set; }
        public virtual DbSet<EPK_Lecturas> EPK_Lecturas { get; set; }
        public virtual DbSet<EPK_Lenguaje> EPK_Lenguaje { get; set; }
        public virtual DbSet<EPK_Localidad> EPK_Localidad { get; set; }
        public virtual DbSet<EPK_LogActualizacion> EPK_LogActualizacion { get; set; }
        public virtual DbSet<EPK_LogErrores> EPK_LogErrores { get; set; }
        public virtual DbSet<EPK_LogUsuarioClave> EPK_LogUsuarioClave { get; set; }
        public virtual DbSet<EPK_MaquinaFiscal> EPK_MaquinaFiscal { get; set; }
        public virtual DbSet<EPK_MarcaDispositivo> EPK_MarcaDispositivo { get; set; }
        public virtual DbSet<EPK_Mensaje> EPK_Mensaje { get; set; }
        public virtual DbSet<EPK_MensajeTerminal> EPK_MensajeTerminal { get; set; }
        public virtual DbSet<EPK_Mes> EPK_Mes { get; set; }
        public virtual DbSet<EPK_ModoVerificacion> EPK_ModoVerificacion { get; set; }
        public virtual DbSet<EPK_Modulo> EPK_Modulo { get; set; }
        public virtual DbSet<EPK_MotivoDescuento> EPK_MotivoDescuento { get; set; }
        public virtual DbSet<EPK_MotivoDevolucion> EPK_MotivoDevolucion { get; set; }
        public virtual DbSet<EPK_NivelPerfil> EPK_NivelPerfil { get; set; }
        public virtual DbSet<EPK_NotaCreditoDetalle> EPK_NotaCreditoDetalle { get; set; }
        public virtual DbSet<EPK_NotaCreditoEncabezado> EPK_NotaCreditoEncabezado { get; set; }
        public virtual DbSet<EPK_Objeto> EPK_Objeto { get; set; }
        public virtual DbSet<EPK_ObjetoAccion> EPK_ObjetoAccion { get; set; }
        public virtual DbSet<EPK_ObjetoEstatus> EPK_ObjetoEstatus { get; set; }
        public virtual DbSet<EPK_Organizacion> EPK_Organizacion { get; set; }
        public virtual DbSet<EPK_PaginasUsuario> EPK_PaginasUsuario { get; set; }
        public virtual DbSet<EPK_Pais> EPK_Pais { get; set; }
        public virtual DbSet<EPK_ParametrosSistema> EPK_ParametrosSistema { get; set; }
        public virtual DbSet<EPK_Parentesco> EPK_Parentesco { get; set; }
        public virtual DbSet<EPK_Perfil> EPK_Perfil { get; set; }
        public virtual DbSet<EPK_PerfilAccion> EPK_PerfilAccion { get; set; }
        public virtual DbSet<EPK_PerfilObjetos> EPK_PerfilObjetos { get; set; }
        public virtual DbSet<EPK_POS> EPK_POS { get; set; }
        public virtual DbSet<EPK_POSTienda> EPK_POSTienda { get; set; }
        public virtual DbSet<EPK_PrioridadModulo> EPK_PrioridadModulo { get; set; }
        public virtual DbSet<EPK_Privilegio> EPK_Privilegio { get; set; }
        public virtual DbSet<EPK_Referencia> EPK_Referencia { get; set; }
        public virtual DbSet<EPK_Region> EPK_Region { get; set; }
        public virtual DbSet<EPK_RegionPais> EPK_RegionPais { get; set; }
        public virtual DbSet<EPK_SeguridadPlantilla> EPK_SeguridadPlantilla { get; set; }
        public virtual DbSet<EPK_SeguridadPlantillaApp> EPK_SeguridadPlantillaApp { get; set; }
        public virtual DbSet<EPK_Talla> EPK_Talla { get; set; }
        public virtual DbSet<EPK_Tema> EPK_Tema { get; set; }
        public virtual DbSet<EPK_Temporada> EPK_Temporada { get; set; }
        public virtual DbSet<EPK_TemporadaGrupo> EPK_TemporadaGrupo { get; set; }
        public virtual DbSet<EPK_Terminal> EPK_Terminal { get; set; }
        public virtual DbSet<EPK_TerminalGrupo> EPK_TerminalGrupo { get; set; }
        public virtual DbSet<EPK_TerminalZona> EPK_TerminalZona { get; set; }
        public virtual DbSet<EPK_Tienda> EPK_Tienda { get; set; }
        public virtual DbSet<EPK_TiendaTelefono> EPK_TiendaTelefono { get; set; }
        public virtual DbSet<EPK_TipoDescuento> EPK_TipoDescuento { get; set; }
        public virtual DbSet<EPK_TipoDispositivo> EPK_TipoDispositivo { get; set; }
        public virtual DbSet<EPK_TipoDocumento> EPK_TipoDocumento { get; set; }
        public virtual DbSet<EPK_TipoEntrada> EPK_TipoEntrada { get; set; }
        public virtual DbSet<EPK_TipoFuncionalidad> EPK_TipoFuncionalidad { get; set; }
        public virtual DbSet<EPK_TipoInsumo> EPK_TipoInsumo { get; set; }
        public virtual DbSet<EPK_TipoParentesco> EPK_TipoParentesco { get; set; }
        public virtual DbSet<EPK_TipoRegion> EPK_TipoRegion { get; set; }
        public virtual DbSet<EPK_TipoServicios> EPK_TipoServicios { get; set; }
        public virtual DbSet<EPK_TipoTemporada> EPK_TipoTemporada { get; set; }
        public virtual DbSet<EPK_TipoTerminal> EPK_TipoTerminal { get; set; }
        public virtual DbSet<EPK_TipoTienda> EPK_TipoTienda { get; set; }
        public virtual DbSet<EPK_TipoTiendaFormaPago> EPK_TipoTiendaFormaPago { get; set; }
        public virtual DbSet<EPK_Usuario> EPK_Usuario { get; set; }
        public virtual DbSet<EPK_UsuarioApp> EPK_UsuarioApp { get; set; }
        public virtual DbSet<EPK_UsuarioBackup> EPK_UsuarioBackup { get; set; }
        public virtual DbSet<EPK_UsuarioTienda> EPK_UsuarioTienda { get; set; }
        public virtual DbSet<EPK_Zonas> EPK_Zonas { get; set; }
        public virtual DbSet<EPK_ConfiguracionSistema> EPK_ConfiguracionSistema { get; set; }
        public virtual DbSet<EPK_Log_Sesiones> EPK_Log_Sesiones { get; set; }
        public virtual DbSet<EPK_LogSesiones> EPK_LogSesiones { get; set; }
        public virtual DbSet<EPK_LogTransacciones> EPK_LogTransacciones { get; set; }
        public virtual DbSet<EPK_Politica> EPK_Politica { get; set; }
        public virtual DbSet<EPK_PreguntaSecreta> EPK_PreguntaSecreta { get; set; }
        public virtual DbSet<EPK_FlujoEfectivo> EPK_FlujoEfectivo { get; set; }
        public virtual DbSet<EPK_FlujoEfectivoDetalle> EPK_FlujoEfectivoDetalle { get; set; }
        public virtual DbSet<EPK_NotaCreditoEsperaDetalle> EPK_NotaCreditoEsperaDetalle { get; set; }
        public virtual DbSet<EPK_NotaCreditoEsperaEncabezado> EPK_NotaCreditoEsperaEncabezado { get; set; }
        public virtual DbSet<EPK_ClienteCompra> EPK_ClienteCompra { get; set; }
        public virtual DbSet<EPK_Articulo> EPK_Articulo { get; set; }
        public virtual DbSet<EPK_TipoPrenda> EPK_TipoPrenda { get; set; }
        public virtual DbSet<EPK_ActualizacionColeccion> EPK_ActualizacionColeccion { get; set; }
        public virtual DbSet<EPK_DepositoEncabezado> EPK_DepositoEncabezado { get; set; }
        public virtual DbSet<EPK_HistoricoContingencia> EPK_HistoricoContingencia { get; set; }
        public virtual DbSet<EPK_CierreMaquinaFiscal> EPK_CierreMaquinaFiscal { get; set; }
        public virtual DbSet<EPK_VentasVolumen> EPK_VentasVolumen { get; set; }
    
        public virtual ObjectResult<EPK_sp_MaestroPedidoSugerido_Result> EPK_sp_MaestroPedidoSugerido(Nullable<int> idColeccion, Nullable<int> menosDe, Nullable<int> pidoPMenosDe, Nullable<int> entre5y, Nullable<int> pidoEntre5y)
        {
            var idColeccionParameter = idColeccion.HasValue ?
                new ObjectParameter("IdColeccion", idColeccion) :
                new ObjectParameter("IdColeccion", typeof(int));
    
            var menosDeParameter = menosDe.HasValue ?
                new ObjectParameter("MenosDe", menosDe) :
                new ObjectParameter("MenosDe", typeof(int));
    
            var pidoPMenosDeParameter = pidoPMenosDe.HasValue ?
                new ObjectParameter("PidoPMenosDe", pidoPMenosDe) :
                new ObjectParameter("PidoPMenosDe", typeof(int));
    
            var entre5yParameter = entre5y.HasValue ?
                new ObjectParameter("Entre5y", entre5y) :
                new ObjectParameter("Entre5y", typeof(int));
    
            var pidoEntre5yParameter = pidoEntre5y.HasValue ?
                new ObjectParameter("PidoEntre5y", pidoEntre5y) :
                new ObjectParameter("PidoEntre5y", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_MaestroPedidoSugerido_Result>("EPK_sp_MaestroPedidoSugerido", idColeccionParameter, menosDeParameter, pidoPMenosDeParameter, entre5yParameter, pidoEntre5yParameter);
        }
    
        public virtual ObjectResult<EPK_sp_PedidoSugeridoTotales_Result> EPK_sp_PedidoSugeridoTotales(Nullable<int> idColeccion, Nullable<int> menosDe, Nullable<int> pidoPMenosDe, Nullable<int> entre5y, Nullable<int> pidoEntre5y)
        {
            var idColeccionParameter = idColeccion.HasValue ?
                new ObjectParameter("IdColeccion", idColeccion) :
                new ObjectParameter("IdColeccion", typeof(int));
    
            var menosDeParameter = menosDe.HasValue ?
                new ObjectParameter("MenosDe", menosDe) :
                new ObjectParameter("MenosDe", typeof(int));
    
            var pidoPMenosDeParameter = pidoPMenosDe.HasValue ?
                new ObjectParameter("PidoPMenosDe", pidoPMenosDe) :
                new ObjectParameter("PidoPMenosDe", typeof(int));
    
            var entre5yParameter = entre5y.HasValue ?
                new ObjectParameter("Entre5y", entre5y) :
                new ObjectParameter("Entre5y", typeof(int));
    
            var pidoEntre5yParameter = pidoEntre5y.HasValue ?
                new ObjectParameter("PidoEntre5y", pidoEntre5y) :
                new ObjectParameter("PidoEntre5y", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_PedidoSugeridoTotales_Result>("EPK_sp_PedidoSugeridoTotales", idColeccionParameter, menosDeParameter, pidoPMenosDeParameter, entre5yParameter, pidoEntre5yParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteComportamientoVta_Result> EPK_sp_ReporteComportamientoVta(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<byte> intervalo, Nullable<System.TimeSpan> horaDesde, Nullable<System.TimeSpan> horaHasta)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var intervaloParameter = intervalo.HasValue ?
                new ObjectParameter("Intervalo", intervalo) :
                new ObjectParameter("Intervalo", typeof(byte));
    
            var horaDesdeParameter = horaDesde.HasValue ?
                new ObjectParameter("HoraDesde", horaDesde) :
                new ObjectParameter("HoraDesde", typeof(System.TimeSpan));
    
            var horaHastaParameter = horaHasta.HasValue ?
                new ObjectParameter("HoraHasta", horaHasta) :
                new ObjectParameter("HoraHasta", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteComportamientoVta_Result>("EPK_sp_ReporteComportamientoVta", fechaInicioParameter, fechaFinParameter, intervaloParameter, horaDesdeParameter, horaHastaParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteConciliacionFormaPago_Result> EPK_sp_ReporteConciliacionFormaPago(Nullable<System.DateTime> fecha, Nullable<int> idCaja, Nullable<byte> idFormaPago, Nullable<int> idEntidad, Nullable<int> idPOS, Nullable<decimal> montoDesde, Nullable<decimal> montoHasta, Nullable<int> idMaquina, string cajero)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            var idFormaPagoParameter = idFormaPago.HasValue ?
                new ObjectParameter("IdFormaPago", idFormaPago) :
                new ObjectParameter("IdFormaPago", typeof(byte));
    
            var idEntidadParameter = idEntidad.HasValue ?
                new ObjectParameter("IdEntidad", idEntidad) :
                new ObjectParameter("IdEntidad", typeof(int));
    
            var idPOSParameter = idPOS.HasValue ?
                new ObjectParameter("IdPOS", idPOS) :
                new ObjectParameter("IdPOS", typeof(int));
    
            var montoDesdeParameter = montoDesde.HasValue ?
                new ObjectParameter("MontoDesde", montoDesde) :
                new ObjectParameter("MontoDesde", typeof(decimal));
    
            var montoHastaParameter = montoHasta.HasValue ?
                new ObjectParameter("MontoHasta", montoHasta) :
                new ObjectParameter("MontoHasta", typeof(decimal));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var cajeroParameter = cajero != null ?
                new ObjectParameter("Cajero", cajero) :
                new ObjectParameter("Cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteConciliacionFormaPago_Result>("EPK_sp_ReporteConciliacionFormaPago", fechaParameter, idCajaParameter, idFormaPagoParameter, idEntidadParameter, idPOSParameter, montoDesdeParameter, montoHastaParameter, idMaquinaParameter, cajeroParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteConciliacionFormaPagoDetalle_Result> EPK_sp_ReporteConciliacionFormaPagoDetalle(Nullable<System.DateTime> fecha, Nullable<int> idCaja, Nullable<int> idFormaPago, Nullable<int> idEntidad, Nullable<int> idPOS, Nullable<decimal> montoDesde, Nullable<decimal> montoHasta, Nullable<int> idMaquina, string cajero)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            var idFormaPagoParameter = idFormaPago.HasValue ?
                new ObjectParameter("IdFormaPago", idFormaPago) :
                new ObjectParameter("IdFormaPago", typeof(int));
    
            var idEntidadParameter = idEntidad.HasValue ?
                new ObjectParameter("IdEntidad", idEntidad) :
                new ObjectParameter("IdEntidad", typeof(int));
    
            var idPOSParameter = idPOS.HasValue ?
                new ObjectParameter("IdPOS", idPOS) :
                new ObjectParameter("IdPOS", typeof(int));
    
            var montoDesdeParameter = montoDesde.HasValue ?
                new ObjectParameter("MontoDesde", montoDesde) :
                new ObjectParameter("MontoDesde", typeof(decimal));
    
            var montoHastaParameter = montoHasta.HasValue ?
                new ObjectParameter("MontoHasta", montoHasta) :
                new ObjectParameter("MontoHasta", typeof(decimal));
    
            var idMaquinaParameter = idMaquina.HasValue ?
                new ObjectParameter("IdMaquina", idMaquina) :
                new ObjectParameter("IdMaquina", typeof(int));
    
            var cajeroParameter = cajero != null ?
                new ObjectParameter("Cajero", cajero) :
                new ObjectParameter("Cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteConciliacionFormaPagoDetalle_Result>("EPK_sp_ReporteConciliacionFormaPagoDetalle", fechaParameter, idCajaParameter, idFormaPagoParameter, idEntidadParameter, idPOSParameter, montoDesdeParameter, montoHastaParameter, idMaquinaParameter, cajeroParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteDevoluciones_Result> EPK_sp_ReporteDevoluciones(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> factDesde, Nullable<int> factHasta, Nullable<int> idMotDev, Nullable<int> idAutoriz, Nullable<int> idColeccion, Nullable<int> idGenero, Nullable<int> idGrupo, string cajero)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var factDesdeParameter = factDesde.HasValue ?
                new ObjectParameter("FactDesde", factDesde) :
                new ObjectParameter("FactDesde", typeof(int));
    
            var factHastaParameter = factHasta.HasValue ?
                new ObjectParameter("FactHasta", factHasta) :
                new ObjectParameter("FactHasta", typeof(int));
    
            var idMotDevParameter = idMotDev.HasValue ?
                new ObjectParameter("IdMotDev", idMotDev) :
                new ObjectParameter("IdMotDev", typeof(int));
    
            var idAutorizParameter = idAutoriz.HasValue ?
                new ObjectParameter("IdAutoriz", idAutoriz) :
                new ObjectParameter("IdAutoriz", typeof(int));
    
            var idColeccionParameter = idColeccion.HasValue ?
                new ObjectParameter("IdColeccion", idColeccion) :
                new ObjectParameter("IdColeccion", typeof(int));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var cajeroParameter = cajero != null ?
                new ObjectParameter("Cajero", cajero) :
                new ObjectParameter("Cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteDevoluciones_Result>("EPK_sp_ReporteDevoluciones", fechaDesdeParameter, fechaHastaParameter, factDesdeParameter, factHastaParameter, idMotDevParameter, idAutorizParameter, idColeccionParameter, idGeneroParameter, idGrupoParameter, cajeroParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReportePagosConsolidados_Result> EPK_sp_ReportePagosConsolidados(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReportePagosConsolidados_Result>("EPK_sp_ReportePagosConsolidados", fechaDesdeParameter, fechaHastaParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteReferenciasSinMovimiento_Result> EPK_sp_ReporteReferenciasSinMovimiento(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idColeccion, string codReferencia, Nullable<int> idTalla, Nullable<int> idColor, Nullable<int> idGenero, Nullable<int> idGrupo, Nullable<int> idTema, Nullable<byte> idTipoPrenda)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idColeccionParameter = idColeccion.HasValue ?
                new ObjectParameter("IdColeccion", idColeccion) :
                new ObjectParameter("IdColeccion", typeof(int));
    
            var codReferenciaParameter = codReferencia != null ?
                new ObjectParameter("CodReferencia", codReferencia) :
                new ObjectParameter("CodReferencia", typeof(string));
    
            var idTallaParameter = idTalla.HasValue ?
                new ObjectParameter("IdTalla", idTalla) :
                new ObjectParameter("IdTalla", typeof(int));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("IdColor", idColor) :
                new ObjectParameter("IdColor", typeof(int));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idTemaParameter = idTema.HasValue ?
                new ObjectParameter("IdTema", idTema) :
                new ObjectParameter("IdTema", typeof(int));
    
            var idTipoPrendaParameter = idTipoPrenda.HasValue ?
                new ObjectParameter("IdTipoPrenda", idTipoPrenda) :
                new ObjectParameter("IdTipoPrenda", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteReferenciasSinMovimiento_Result>("EPK_sp_ReporteReferenciasSinMovimiento", fechaDesdeParameter, fechaHastaParameter, idColeccionParameter, codReferenciaParameter, idTallaParameter, idColorParameter, idGeneroParameter, idGrupoParameter, idTemaParameter, idTipoPrendaParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteResumenDiarioVtas_Result> EPK_sp_ReporteResumenDiarioVtas(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, string serialMF)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var serialMFParameter = serialMF != null ?
                new ObjectParameter("SerialMF", serialMF) :
                new ObjectParameter("SerialMF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteResumenDiarioVtas_Result>("EPK_sp_ReporteResumenDiarioVtas", fechaDesdeParameter, fechaHastaParameter, serialMFParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteVentaDiaria_Result> EPK_sp_ReporteVentaDiaria(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteVentaDiaria_Result>("EPK_sp_ReporteVentaDiaria", fechaDesdeParameter, fechaHastaParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteVentasxArticulos_Result> EPK_sp_ReporteVentasxArticulos(Nullable<int> idColeccion, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta)
        {
            var idColeccionParameter = idColeccion.HasValue ?
                new ObjectParameter("IdColeccion", idColeccion) :
                new ObjectParameter("IdColeccion", typeof(int));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteVentasxArticulos_Result>("EPK_sp_ReporteVentasxArticulos", idColeccionParameter, fechaDesdeParameter, fechaHastaParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteVtaDiariaFPConsolidado_Result> EPK_sp_ReporteVtaDiariaFPConsolidado(Nullable<System.DateTime> fecha, Nullable<int> idFormaPago)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idFormaPagoParameter = idFormaPago.HasValue ?
                new ObjectParameter("IdFormaPago", idFormaPago) :
                new ObjectParameter("IdFormaPago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteVtaDiariaFPConsolidado_Result>("EPK_sp_ReporteVtaDiariaFPConsolidado", fechaParameter, idFormaPagoParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteVtaDiariaFPDetallado_Result> EPK_sp_ReporteVtaDiariaFPDetallado(Nullable<System.DateTime> fecha, Nullable<int> idFormaPago)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idFormaPagoParameter = idFormaPago.HasValue ?
                new ObjectParameter("IdFormaPago", idFormaPago) :
                new ObjectParameter("IdFormaPago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteVtaDiariaFPDetallado_Result>("EPK_sp_ReporteVtaDiariaFPDetallado", fechaParameter, idFormaPagoParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteVtaDiariaTotalesConsolidado_Result> EPK_sp_ReporteVtaDiariaTotalesConsolidado(Nullable<System.DateTime> fecha, Nullable<int> idFormaPago)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idFormaPagoParameter = idFormaPago.HasValue ?
                new ObjectParameter("IdFormaPago", idFormaPago) :
                new ObjectParameter("IdFormaPago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteVtaDiariaTotalesConsolidado_Result>("EPK_sp_ReporteVtaDiariaTotalesConsolidado", fechaParameter, idFormaPagoParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteVtaDiariaTotalesFPConsolidado_Result> EPK_sp_ReporteVtaDiariaTotalesFPConsolidado(Nullable<System.DateTime> fecha, Nullable<int> idFormaPago)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var idFormaPagoParameter = idFormaPago.HasValue ?
                new ObjectParameter("IdFormaPago", idFormaPago) :
                new ObjectParameter("IdFormaPago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteVtaDiariaTotalesFPConsolidado_Result>("EPK_sp_ReporteVtaDiariaTotalesFPConsolidado", fechaParameter, idFormaPagoParameter);
        }
    
        public virtual int EPK_sp_LecturasActualizar(Nullable<int> idRegion, Nullable<int> idLocalidad, Nullable<int> idEmpleado, Nullable<int> idTerminal, string fecha, string hora, Nullable<short> tipoEntrada, Nullable<short> idEstadoLectura, Nullable<short> modoVerificacion, Nullable<short> workCode)
        {
            var idRegionParameter = idRegion.HasValue ?
                new ObjectParameter("IdRegion", idRegion) :
                new ObjectParameter("IdRegion", typeof(int));
    
            var idLocalidadParameter = idLocalidad.HasValue ?
                new ObjectParameter("IdLocalidad", idLocalidad) :
                new ObjectParameter("IdLocalidad", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("IdEmpleado", idEmpleado) :
                new ObjectParameter("IdEmpleado", typeof(int));
    
            var idTerminalParameter = idTerminal.HasValue ?
                new ObjectParameter("IdTerminal", idTerminal) :
                new ObjectParameter("IdTerminal", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var horaParameter = hora != null ?
                new ObjectParameter("Hora", hora) :
                new ObjectParameter("Hora", typeof(string));
    
            var tipoEntradaParameter = tipoEntrada.HasValue ?
                new ObjectParameter("TipoEntrada", tipoEntrada) :
                new ObjectParameter("TipoEntrada", typeof(short));
    
            var idEstadoLecturaParameter = idEstadoLectura.HasValue ?
                new ObjectParameter("IdEstadoLectura", idEstadoLectura) :
                new ObjectParameter("IdEstadoLectura", typeof(short));
    
            var modoVerificacionParameter = modoVerificacion.HasValue ?
                new ObjectParameter("ModoVerificacion", modoVerificacion) :
                new ObjectParameter("ModoVerificacion", typeof(short));
    
            var workCodeParameter = workCode.HasValue ?
                new ObjectParameter("WorkCode", workCode) :
                new ObjectParameter("WorkCode", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EPK_sp_LecturasActualizar", idRegionParameter, idLocalidadParameter, idEmpleadoParameter, idTerminalParameter, fechaParameter, horaParameter, tipoEntradaParameter, idEstadoLecturaParameter, modoVerificacionParameter, workCodeParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteCierreCajero_Result> EPK_sp_ReporteCierreCajero(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idCaja, string cajero)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            var cajeroParameter = cajero != null ?
                new ObjectParameter("Cajero", cajero) :
                new ObjectParameter("Cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteCierreCajero_Result>("EPK_sp_ReporteCierreCajero", fechaDesdeParameter, fechaHastaParameter, idCajaParameter, cajeroParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteOperacionesCajero_Result> EPK_sp_ReporteOperacionesCajero(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idCaja, string cajero)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            var cajeroParameter = cajero != null ?
                new ObjectParameter("Cajero", cajero) :
                new ObjectParameter("Cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteOperacionesCajero_Result>("EPK_sp_ReporteOperacionesCajero", fechaDesdeParameter, fechaHastaParameter, idCajaParameter, cajeroParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ArticuloConsultar_Result> EPK_sp_ArticuloConsultar(Nullable<int> idArticulo, string codigoArticulo, Nullable<int> idReferencia, string descripcion, Nullable<int> idColor, Nullable<int> idTalla, Nullable<bool> activo, Nullable<bool> exento, string referencia, Nullable<int> idGrupo, Nullable<int> idGenero, Nullable<int> idTema, Nullable<int> idColeccion)
        {
            var idArticuloParameter = idArticulo.HasValue ?
                new ObjectParameter("IdArticulo", idArticulo) :
                new ObjectParameter("IdArticulo", typeof(int));
    
            var codigoArticuloParameter = codigoArticulo != null ?
                new ObjectParameter("CodigoArticulo", codigoArticulo) :
                new ObjectParameter("CodigoArticulo", typeof(string));
    
            var idReferenciaParameter = idReferencia.HasValue ?
                new ObjectParameter("IdReferencia", idReferencia) :
                new ObjectParameter("IdReferencia", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("IdColor", idColor) :
                new ObjectParameter("IdColor", typeof(int));
    
            var idTallaParameter = idTalla.HasValue ?
                new ObjectParameter("IdTalla", idTalla) :
                new ObjectParameter("IdTalla", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var exentoParameter = exento.HasValue ?
                new ObjectParameter("Exento", exento) :
                new ObjectParameter("Exento", typeof(bool));
    
            var referenciaParameter = referencia != null ?
                new ObjectParameter("Referencia", referencia) :
                new ObjectParameter("Referencia", typeof(string));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            var idGeneroParameter = idGenero.HasValue ?
                new ObjectParameter("IdGenero", idGenero) :
                new ObjectParameter("IdGenero", typeof(int));
    
            var idTemaParameter = idTema.HasValue ?
                new ObjectParameter("IdTema", idTema) :
                new ObjectParameter("IdTema", typeof(int));
    
            var idColeccionParameter = idColeccion.HasValue ?
                new ObjectParameter("IdColeccion", idColeccion) :
                new ObjectParameter("IdColeccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ArticuloConsultar_Result>("EPK_sp_ArticuloConsultar", idArticuloParameter, codigoArticuloParameter, idReferenciaParameter, descripcionParameter, idColorParameter, idTallaParameter, activoParameter, exentoParameter, referenciaParameter, idGrupoParameter, idGeneroParameter, idTemaParameter, idColeccionParameter);
        }
    
        public virtual ObjectResult<EPK_sp_ReporteAperturaCajero_Result> EPK_sp_ReporteAperturaCajero(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idCaja, string cajero)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("IdCaja", idCaja) :
                new ObjectParameter("IdCaja", typeof(int));
    
            var cajeroParameter = cajero != null ?
                new ObjectParameter("Cajero", cajero) :
                new ObjectParameter("Cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_ReporteAperturaCajero_Result>("EPK_sp_ReporteAperturaCajero", fechaDesdeParameter, fechaHastaParameter, idCajaParameter, cajeroParameter);
        }
    
        public virtual ObjectResult<EPK_sp_CierreMaquinaFiscalValidar_Result> EPK_sp_CierreMaquinaFiscalValidar(Nullable<System.DateTime> fechaI, Nullable<System.DateTime> fechaF)
        {
            var fechaIParameter = fechaI.HasValue ?
                new ObjectParameter("FechaI", fechaI) :
                new ObjectParameter("FechaI", typeof(System.DateTime));
    
            var fechaFParameter = fechaF.HasValue ?
                new ObjectParameter("FechaF", fechaF) :
                new ObjectParameter("FechaF", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EPK_sp_CierreMaquinaFiscalValidar_Result>("EPK_sp_CierreMaquinaFiscalValidar", fechaIParameter, fechaFParameter);
        }
    
        public virtual int EPK_sp_ValidarArticuloObsequio(string codarticulo, ObjectParameter result)
        {
            var codarticuloParameter = codarticulo != null ?
                new ObjectParameter("codarticulo", codarticulo) :
                new ObjectParameter("codarticulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EPK_sp_ValidarArticuloObsequio", codarticuloParameter, result);
        }
    }
}
